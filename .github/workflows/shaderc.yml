name: shaderc
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
    inputs:
      compiler:
        description: "Compiler"
        required: false
        default: "clang"
        type: choice
        options:
        - clang
        - gcc      
      build_target:
        description: "Build target"
        required: false
        default: "x86_64"
        type: choice
        options:
        - x86_64
        - x86_64_v3

  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  shaderc:
    runs-on: ubuntu-latest
    env:
      COMPILER: ${{ inputs.compiler }}
      BIT: ${{ inputs.build_target }}
      GH_TOKEN: ${{ secrets.BOT }}
    container:
      image: docker://ghcr.io/eko5624/archlinux:latest
    steps:
      - name: Checkout
        uses: actions/checkout@main      
      - name: Add builder user
        run: |
          useradd builder -m
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          sudo cp pacman-config/makepkg_cross_$COMPILER.conf /etc
          sudo cp pacman-config/makepkg-cross-$COMPILER /usr/bin
      - name: Setting top_dir env
        run: echo "top_dir=$(cd ~ && pwd)" >> $GITHUB_ENV
      - name: Loading ${{ inputs.compiler }}-${{ inputs.build_target }} cache
        uses: actions/cache@main
        with:
          path: ${{ env.top_dir }}/cross
          key: ${{ inputs.compiler }}-${{ inputs.build_target }}-ucrt
      - name: Build
        run: |
          curl -OL -f https://github.com/${{ github.repository }}/releases/download/dev-clang-$BIT/shaderc-thinlto-2024.1-1-x86_64.pkg.tar.zst || true
          pacman -U *.zst --noconfirm || true
          mkdir -p ${{ env.top_dir }}/ccache && cp ccache.conf ${{ env.top_dir }}/ccache
          sudo chmod 777 -R ${{ env.top_dir }} .
          cd shaderc-dev; sudo -H -u builder makepkg-cross-$COMPILER -sLf
      - name: Release    
        run: |
          ./release-dev.sh shaderc-dev shaderc-dev
          ./release-dev.sh shaderc-thinlto shaderc-dev || true

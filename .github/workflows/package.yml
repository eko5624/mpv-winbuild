name: Package
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
    inputs:
      build_target:
        description: "Build target"
        required: false
        default: "x86_64"
        type: choice
        options:
        - x86_64
        - x86_64_v3

  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  package:
    runs-on: ubuntu-latest
    env:
      BIT: ${{ inputs.build_target }}
      GH_TOKEN: ${{ secrets.BOT }} 
    container:
      image: docker://ghcr.io/eko5624/archlinux:latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setting top_dir env
        run: echo "top_dir=$(cd ~ && pwd)" >> $GITHUB_ENV
      - name: Setup Packages
        run: |
          curl -OL https://github.com/${{ github.repository }}/releases/download/latest-llvm-clang-$BIT/config-1.0-1-x86_64.pkg.tar.xz        
          curl -OL https://github.com/${{ github.repository }}/releases/download/latest-llvm-clang-$BIT/ffmpeg-git-6.1.1-1-x86_64.pkg.tar.xz
          curl -OL https://github.com/${{ github.repository }}/releases/download/latest-llvm-clang-$BIT/libmpv-git-0.37.0-1-x86_64.pkg.tar.xz
          curl -OL https://github.com/${{ github.repository }}/releases/download/latest-llvm-clang-$BIT/mpv-git-0.37.0-1-x86_64.pkg.tar.xz
          pacman -U *.xz --noconfirm
      - name: Get ffmpeg latest commit sha
        run: echo "ffmpeg_sha=$(cat ${{ env.top_dir }}/opt/ffmpeg/SHORT_SHA)" >> $GITHUB_ENV
      - name: Get current timestamp
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_ENV
      - name: Zip Packages    
        run: |
          curl -OL https://github.com/yt-dlp/yt-dlp/releases/download/2023.12.30/yt-dlp.exe
          mv yt-dlp.exe ${{ env.top_dir }}/opt/mpv
          7z a static-mpv-$BIT.7z ${{ env.top_dir }}/opt/mpv/*
          7z a git-libmpv-$BIT.7z ${{ env.top_dir }}/opt/libmpv/*
          7z a git-ffmpeg-$BIT-${{ env.ffmpeg_sha }}.7z ${{ env.top_dir }}/opt/ffmpeg/*
      - name: Release
        run: ./release-package.sh
